library(partitions)
oparts <- function(N){
# generate an integral matrix whose columns are the overpartitions of N
# overlines denoted by negative integers
if (N == 0){
return(matrix(nrow=0, ncol=0))
} else if (N == 1){
return(matrix(c(1, -1), nrow=1))
}
# weight = sum of overlined parts
weight <- 0:N
ovr.list <- lapply(weight, function(i) -diffparts(i))
ptn.list <- lapply(weight, function(i) parts(i))
ptn.list[[1]] <- matrix(0)
ovr.count <- lapply(ovr.list, function(M) ncol(M))
ptn.count <- lapply(ptn.list, function(M) ncol(M))
ovr.temp <- lapply(
weight, function(i)
rbind(ovr.list[[i+1]] %x% t(rep(1, ptn.count[[N-i+1]])),
t(rep(1, ovr.count[[i+1]])) %x% ptn.list[[N-i+1]]
)
)
ovr.temp <- lapply(
ovr.temp, function(M)
rbind(
M, matrix(rep(0, ncol(M)*(N-nrow(M))), ncol=ncol(M))
)
)
ovr.mat <- do.call(cbind, ovr.temp)
return(ovr.mat)
}
OP <- function(N){
return(ncol(oparts(N)))
}
library(partitions)
cranks <- function(k, matrix){
# Generate an integral vector whose entries are the k-th residual cranks of the overpartitions
# listed in matrix
omega = colSums(matrix == k)
mu = colSums(t(t(matrix) > omega))
cranks = matrix[1,]*(omega == 0) + (mu - omega)*(omega > 0)
return(cranks)
}
mat4 <- read.csv("~/Documents/GitHub/Overpartitions/data/4.csv", header=FALSE)
View(mat4)
cranks(1, mat4)
mat1 <- matrix(c(-2,1,1), nrow=1)
mat1
cranks(mat1)
cranks(1,mat1)
colSums(mat1==1)
rowSums(mat1==1)
mat1{mat1 == 1}
mat1(mat1==1)
mat1[mat1==1]
mat1[mat1>2==]
mat1[mat1>2]
mat1[mat1 %% 2 == 0]
mat1[mat1 %% 2 == 0 && mat1 > 0]
omega <- rowSums(mat1 == 1)
omega
colSums(t(t(mat1) > omega))
mat1[]
mat1[mat1 > 0]
rowSums(mat1 > 0)
rowSums(2*mat1 > 0)
cranks(mat1)
cranks(1, mat1)
library(partitions)
cranks <- function(k, matrix){
# Generate an integral matrix whose entries are the k-th residual cranks of the overpartitions
# listed in matrix
omega = rowSums(matrix == k)
mu = rowSums(matrix > omega)
cranks = matrix[1,]*(omega == 0) + (mu - omega)*(omega > 0)
return(cranks)
}
cranks(1, mat1)
library(partitions)
cranks <- function(k, matrix){
# Generate an integral matrix whose entries are the k-th residual cranks of the overpartitions
# listed in matrix
omega = rowSums(matrix == k)
mu = rowSums(matrix > omega)
cranks = matrix[1,]*(omega == 0) + (mu - omega)*(omega > 0)
return(omega)
}
cranks(1, mat1)
library(partitions)
cranks <- function(k, matrix){
# Generate an integral matrix whose entries are the k-th residual cranks of the overpartitions
# listed in matrix
omega = rowSums(matrix == k)
mu = rowSums(matrix > omega)
cranks = matrix[1,]*(omega == 0) + (mu - omega)*(omega > 0)
return(mu)
}
cranks(1, mat1)
library(partitions)
cranks <- function(k, matrix){
# Generate an integral matrix whose entries are the k-th residual cranks of the overpartitions
# listed in matrix
omega = rowSums(matrix == k)
mu = rowSums(matrix %% k == 0 && matrix > omega)
largest = matrix[1,]
diff = (mu - omega)*(omega > 0)
#cranks = matrix[1,]*(omega == 0) + (mu - omega)*(omega > 0)
return(diff)
}
cranks(1, mat1)
mat1[mat1 %% 2 == 0]
mat1[mat1 %% 2 == 0][mat1 > 0]
mat1[mat1 %% 2 == 0]
cranks(1, mat1)
mat4
mat4[mat4 == 1]
mat4[mat4 %% 2 == 1]
